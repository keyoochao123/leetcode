# 输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。

class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        if not matrix: return []
        l,r,t,b,res = 0,len(matrix[0])-1,0,len(matrix)-1,[]
        while True:
            for i in range(l,r+1):res.append(matrix[t][i])
            t += 1
            if t>b:break
            for i in range(t,b+1):res.append(matrix[i][r])
            r -= 1
            if l>r:break
            for i in range(r,l-1,-1):res.append(matrix[b][i])
            b -= 1
            if t>b:break
            for i in range(b,t-1,-1):res.append(matrix[i][l])
            l += 1
            if l>r:break
        return res
 循环打印，左到右，上到下，右到左，下到上四个方向循环，每个方向中做三件事：
 1.根据边界打印，将元素按顺序添加至列表res尾部
 2.边界向内缩1
 3.判断是否打印完毕（边界是否相遇），打印完毕则跳出
