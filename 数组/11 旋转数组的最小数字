# 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。

# 给你一个可能存在 重复 元素值的数组 numbers ，它原来是一个升序排列的数组，并按上述情形进行了一次旋转。请返回旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一次旋转，该数组的最小值为1。   

class Solution:
    def minArray(self, numbers: List[int]) -> int:
        i = 0 # i,j分别是数组的左右两端
        j = len(numbers)-1
        while i<j:
            m = (i+j)//2 # m是他俩的中间的位置
            if numbers[j]>numbers[m]:j=m # 往左缩，变小
            elif numbers[j] == numbers[m]:j -= 1 # 遇到重复数字的时候，往左缩
            else:i = m+1 # m已经遇到了往左会变大的数字，这时候i应该比m要往右加一，i==j的时候跳出循环
        return numbers[i]
