# 输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。

# 假设输入的前序遍历和中序遍历的结果中都不含重复的数字。

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        def recur(root, left, right):
            if left > right:return
            node = TreeNode(preorder[root])
            # 查询根在中序遍历数组中的位置
            i = dic[preorder[root]]
            node.left = recur(root+1, left, i-1)
            node.right = recur(root+1-left+i,i+1,right)
            return node
        dic = {}
        for i in range(len(inorder)): # 用字典存储中序遍历数组
            dic[inorder[i]]=i
        return recur(0,0,len(inorder)-1)
        
# recur()表示找到每一个节点为根节点的时候的左右子树
