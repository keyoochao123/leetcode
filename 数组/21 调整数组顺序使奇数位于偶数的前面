# 输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数在数组的前半部分，所有偶数在数组的后半部分。
# 用双指针的方法，左边找偶数，右边找奇数，找到之后就调换顺序

class Solution:
    def exchange(self, nums: List[int]) -> List[int]:
        i, j = 0, len(nums) - 1
        while i < j:
            while i < j and nums[i] % 2 == 1: i += 1
            while i < j and nums[j] % 2 == 0: j -= 1
            # 这里改成 while i < j and nums[i] & 1 == 1: i += 1用时变少，内存消耗变少，以后记得用这种
            nums[i], nums[j] = nums[j], nums[i]
        return nums
