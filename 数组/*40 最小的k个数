# 输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。

class Solution:
    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:
        if k >= len(arr): return arr
        def quick_sort(l, r):
            i, j = l, r
            while i < j:
                # 直到左边的找到大于哨兵的值，右边的找到小于哨兵的值，这时候交换两个值
                while i < j and arr[j] >= arr[l]: j -= 1#每次都要先比右边的，再比左边的
                while i < j and arr[i] <= arr[l]: i += 1
                arr[i], arr[j] = arr[j], arr[i]
            # i >= j的时候，又去重新找哨兵
            arr[l], arr[i] = arr[i], arr[l]
            if k < i: return quick_sort(l, i - 1) # 这时候去左边找
            if k > i: return quick_sort(i + 1, r) # 去右边找
            return arr[:k]
            
        return quick_sort(0, len(arr) - 1)
