# 给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是 回文串 。返回 s 所有可能的分割方案。

# 回文串 是正着读和反着读都一样的字符串。
class Solution:
    def __init__(self):
        self.path = []
        self.re = []
    def partition(self, s: str) -> List[List[str]]:
        self.backtracking(s,0)
        return self.re
    def backtracking(self,s:str,start_index:int) -> None:
        if start_index >= len(s):
            self.re.append(self.path[:])
            return 
        for i in range(start_index,len(s)):
            # 被截取的这一段
            temp = s[start_index:i+1]
            if temp == temp[::-1]:
                self.path.append(temp)
                self.backtracking(s,i+1)
                self.path.pop()
            else:
                continue
