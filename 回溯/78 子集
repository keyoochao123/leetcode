# 给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。

# 解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。
class Solution:
    def __init__(self):
        self.path = []
        self.paths = []
    def subsets(self, nums: List[int]) -> List[List[int]]:
        self.backtracking(nums,0)
        return self.paths
    def backtracking(self,nums:List[int],startIndex:int) -> None:
        self.paths.append(self.path[:])
        if startIndex == len(nums):
            return 
        for i in range(startIndex,len(nums)):
            self.path.append(nums[i])
            self.backtracking(nums,i+1)
            self.path.pop()
