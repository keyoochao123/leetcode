# 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。

# 解集 不能 包含重复的子集。返回的解集中，子集可以按 任意顺序 排列。

class Solution:
    def __init__(self):
        self.path=[]
        self.paths = []
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        self.backtracking(nums,0)
        return self.paths
    def backtracking(self,nums:List[int],startIndex:int) -> None:
        self.paths.append(self.path[:])
        if startIndex == len(nums):
            return
        for i in range(startIndex,len(nums)):
            if i > startIndex and nums[i]==nums[i-1]:
                continue
            self.path.append(nums[i])
            self.backtracking(nums,i+1)
            self.path.pop()
