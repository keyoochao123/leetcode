# 给你一个二叉搜索树的根节点 root ，返回 树中任意两不同节点值之间的最小差值 。
# 差值是一个正数，其数值等于两值之差的绝对值。

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# 先变成list，再比大小
class Solution:
    def getMinimumDifference(self, root: TreeNode) -> int:
        re = []
        r = float(inf)
        def buildlist(root:TreeNode) -> int:
            if not root:return None
            buildlist(root.left)
            re.append(root.val)
            buildlist(root.right)
            return re
        buildlist(root)
        for i in range(len(re)-1):
            r = min(abs(re[i]-re[i+1]),r)
        return r
