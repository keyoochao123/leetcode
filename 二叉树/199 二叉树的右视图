# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
import collections
class Solution:
    def rightSideView(self, root: TreeNode) -> List[int]:
        if not root:return[]
        queue=collections.deque()
        queue.append(root)
        re=[]
        res=[]
        while queue:
            re_temp=[]
            size=len(queue)
            for i in range(size):
                node=queue.popleft()
                re_temp.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            re.append(re_temp)
        for j in range(len(re)):
            res.append(re[j][-1])
        return res
