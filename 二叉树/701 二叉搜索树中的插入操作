# 给定二叉搜索树（BST）的根节点 root 和要插入树中的值 value ，将值插入二叉搜索树。 返回插入后二叉搜索树的根节点。 输入数据 保证 ，新值和原始二叉搜索树中的任意节点值都不同。

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def insertIntoBST(self, root: TreeNode, val: int) -> TreeNode:
        if not root:return TreeNode(val)
        # 将val插入至当前root的左子树中合适的位置
        # 并更新当前root的左子树为包含目标val的新左子树
        if root.val>val: root.left = self.insertIntoBST(root.left,val)
        if root.val<val: root.right = self.insertIntoBST(root.right,val)
        return root
