# 给定二叉搜索树（BST）的根节点 root 和一个整数值 val。

# 你需要在 BST 中找到节点值等于 val 的节点。 返回以该节点为根的子树。 如果节点不存在，则返回 null 。

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# class Solution:
#     def searchBST(self, root: TreeNode, val: int) -> TreeNode:
#         if not root or root.val==val:return root
#         if root.val > val:return self.searchBST(root.left,val)
#         if root.val < val:return self.searchBST(root.right,val)
#         return None

class Solution:
    def searchBST(self, root: TreeNode, val: int) -> TreeNode:
        while root:
            if root.val > val:root = root.left
            elif root.val < val:root = root.right
            else:return root
        return None
