# 给你一棵 完全二叉树 的根节点 root ，求出该树的节点个数。
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# 递归法
# class Solution:
#     def countNodes(self, root: TreeNode) -> int:
#         return self.getNodes(root)
#     def getNodes(self,node:TreeNode) -> int:
#         if node == None:return 0
#         leftnum = self.getNodes(node.left)
#         rightnum = self.getNodes(node.right)
#         treenum = 1+leftnum+rightnum
#         return treenum
# 迭代法
import collections
class Solution:
    def countNodes(self, root: TreeNode) -> int:
        queue = collections.deque()
        if root:queue.append(root)
        re = 0
        while queue:
            size = len(queue)
            for i in range(size):
                node = queue.popleft()
                re += 1
                if node.left:queue.append(node.left)
                if node.right:queue.append(node.right)
        return re

        
