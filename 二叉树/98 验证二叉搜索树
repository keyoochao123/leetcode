# 给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# 中序遍历，先变成list，再看是不是按顺序
class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        re = []
        def _traversal(root:TreeNode) -> bool:
            if not root:return None
            _traversal(root.left)
            re.append(root.val)
            _traversal(root.right)
        
        def _issorted(nums:list) -> bool:
            for i in range(1,len(nums)):
                if nums[i] <= nums[i-1]:
                    return False
            return True
        _traversal(root)
        res = _issorted(re)
        return res
